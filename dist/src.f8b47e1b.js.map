{"version":3,"sources":["index.js"],"names":["choices","rockBtn","document","querySelector","paperBtn","scissorBtn","resetBtn","scoreBoard","userScoreboard","compScoreBoard","main","playersDiv","roundResults","createElement","classList","add","userCard","compCard","winner","btnContainer","compChoiceDiv","getComputerChoice","randomChoice","Math","floor","random","length","playRound","playerSelection","computerSelection","game","gamesPlayed","playerScore","compScore","checkWinner","textContent","appendChild","addEventListener","user","computer","round","trim","insertBefore","slice","disabled","removeChild","winnerDivs","i","currentDiv","contains","setTimeout"],"mappings":"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","file":"src.f8b47e1b.js","sourceRoot":"../src","sourcesContent":["const choices = ['rock', 'paper', 'scissors'];\n\n//Buttons\nlet rockBtn = document.querySelector('.rock');\nlet paperBtn = document.querySelector('.paper');\nlet scissorBtn = document.querySelector('.scissors');\nlet resetBtn = document.querySelector('.reset');\n\n//Scores\nlet scoreBoard = document.querySelector('.scoreBoard');\nlet userScoreboard = document.querySelector('.userScore');\nlet compScoreBoard = document.querySelector('.computerScore');\n\n//Results of each round\nlet main = document.querySelector('main');\nlet playersDiv = document.querySelector('.players');\nlet roundResults = document.createElement('div');\nroundResults.classList.add('roundResults');\n\n//display winner\nlet userCard = document.querySelector('.user');\nlet compCard = document.querySelector('.computer');\nlet winner = document.createElement('div');\nwinner.classList.add('winner');\n\n//display computer choices\nlet btnContainer = document.querySelector('.gameButtons');\nlet compChoiceDiv = document.createElement('div');\ncompChoiceDiv.classList.add('computerChoice');\n\ngame();\n\nfunction getComputerChoice() {\n    \n    let randomChoice = Math.floor(Math.random() * choices.length);\n    return choices[randomChoice];\n}\n\nfunction playRound(playerSelection, computerSelection){\n    \n    //check for a tie\n    if (playerSelection === computerSelection) {\n        return('its a tie');\n    } \n    \n    //player choices rock\n    if (playerSelection === choices[0]){\n        if (computerSelection === choices[1]){\n            return('You Lose! Paper beats rock.');\n        } else if (computerSelection === choices[2]){\n            return('You Win! Rock beats scissors.');\n        }\n    } \n    \n    //player chooses paper\n    if (playerSelection === choices[1]){\n        if (computerSelection === choices[2]){\n            return('You Lose! Scissors beats paper.');\n        } else if (computerSelection === choices[0]){\n            return('You Win! Paper beats rock.')\n        }\n    } \n    \n    //player chooses scissors\n    if (playerSelection === choices[2]){\n        if (computerSelection === choices[0]){\n            return('You Lose! Rock beats scissors.');\n        } else if (computerSelection === choices[1]){\n            return('You Win! Scissors beats paper.');\n        }   \n    } \n}\n\nfunction game(){\n    let gamesPlayed = 0;\n    let playerScore = 0;\n    let compScore = 0;\n    \n    // Add event listeners for each button\n    rockBtn.addEventListener('click', function() {\n        let user = choices[0]; // Player selects rock\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){ //append div only if there is text content. otherwise its hidden\n            main.insertBefore(roundResults, playersDiv);\n        }\n        // Update scores and display messages based on round outcome\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; // Update score in game function for player win\n        } else if (round.slice(0, 9) == 'You Lose!') { // Not a tie and not a player win, computer wins\n            compScore++; // Update score in game function for computer win\n        }   \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    paperBtn.addEventListener('click', function() {\n    // Similar logic for paper button click\n        let user = choices[1];\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){\n            main.insertBefore(roundResults, playersDiv);\n        }\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; \n        } else if (round.slice(0, 9) == 'You Lose!') { \n            compScore++;\n        }    \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    scissorBtn.addEventListener('click', function() {\n    // Similar logic for scissor button click\n        let user = choices[2];\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){\n            main.insertBefore(roundResults, playersDiv);\n        }\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; \n        } else if (round.slice(0, 9) == 'You Lose!') { \n            compScore++; \n        }\n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    // Function to update scores and display messages\n    function updateScore(round, playerScore, compScore) {\n        if (round === 'It\\'s a tie') {\n          console.log(`It's a tie. Play again.`);\n        } else if (round.slice(0, 8) === 'You Win!') {\n          playerScore++;\n          console.log('Player Score: ' + playerScore + ' - Comp Score: ' + compScore);\n        } else {\n          compScore++;\n          console.log('Player Score: ' + playerScore + ' - Comp Score: ' + compScore);\n        }\n    }\n\n    // Function to check for winner and end game\n    function checkWinner(playerScore, compScore) {\n        if (playerScore === 5) {\n            winner.textContent = ('Player Wins!');\n            userCard.appendChild(winner);\n            // You can optionally reset the game here\n        } else if (compScore === 5) {\n            winner.textContent = ('Computer Wins!');\n            compCard.appendChild(winner);\n          // You can optionally reset the game here\n        }\n    }\n\n    resetBtn.addEventListener('click', function() {\n        rockBtn.disabled = true; // Disable buttons\n        paperBtn.disabled = true;\n        scissorBtn.disabled = true;\n        \n        playerScore = 0;\n        compScore = 0;\n        gamesPlayed = 0;\n        scoreBoard.textContent = ('Game Reset! Scores: 0 - 0'); \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        main.removeChild(roundResults);\n        main.removeChild(compChoiceDiv);\n\n        //remove winner banner/div from player card on reset\n        let winnerDivs = [userCard, compCard]; // Array of both divs to check\n\n        for (let i = 0; i < winnerDivs.length; i++) {\n            let currentDiv = winnerDivs[i];\n            if (currentDiv.contains(winner)) { // Check if winner element exists in current div\n                currentDiv.removeChild(winner);\n                break; // Exit the loop after removing from the first matching div\n            }\n        }\n\n      \n        // After a short delay (optional)\n        setTimeout(function() {\n          rockBtn.disabled = false; // Re-enable buttons\n          paperBtn.disabled = false;\n          scissorBtn.disabled = false;\n        }, 1000); // Delay in milliseconds (adjust as needed)\n    })\n}\n"]}