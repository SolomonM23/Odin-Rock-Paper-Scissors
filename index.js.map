{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const choices = ['rock', 'paper', 'scissors'];\n\n//Buttons\nlet rockBtn = document.querySelector('.rock');\nlet paperBtn = document.querySelector('.paper');\nlet scissorBtn = document.querySelector('.scissors');\nlet resetBtn = document.querySelector('.reset');\n\n//Scores\nlet scoreBoard = document.querySelector('.scoreBoard');\nlet userScoreboard = document.querySelector('.userScore');\nlet compScoreBoard = document.querySelector('.computerScore');\n\n//Results of each round\nlet main = document.querySelector('main');\nlet playersDiv = document.querySelector('.players');\nlet roundResults = document.createElement('div');\nroundResults.classList.add('roundResults');\n\n//display winner\nlet userCard = document.querySelector('.user');\nlet compCard = document.querySelector('.computer');\nlet winner = document.createElement('div');\nwinner.classList.add('winner');\n\n//display computer choices\nlet btnContainer = document.querySelector('.gameButtons');\nlet compChoiceDiv = document.createElement('div');\ncompChoiceDiv.classList.add('computerChoice');\n\ngame();\n\nfunction getComputerChoice() {\n    \n    let randomChoice = Math.floor(Math.random() * choices.length);\n    return choices[randomChoice];\n}\n\nfunction playRound(playerSelection, computerSelection){\n    \n    //check for a tie\n    if (playerSelection === computerSelection) {\n        return('its a tie');\n    } \n    \n    //player choices rock\n    if (playerSelection === choices[0]){\n        if (computerSelection === choices[1]){\n            return('You Lose! Paper beats rock.');\n        } else if (computerSelection === choices[2]){\n            return('You Win! Rock beats scissors.');\n        }\n    } \n    \n    //player chooses paper\n    if (playerSelection === choices[1]){\n        if (computerSelection === choices[2]){\n            return('You Lose! Scissors beats paper.');\n        } else if (computerSelection === choices[0]){\n            return('You Win! Paper beats rock.')\n        }\n    } \n    \n    //player chooses scissors\n    if (playerSelection === choices[2]){\n        if (computerSelection === choices[0]){\n            return('You Lose! Rock beats scissors.');\n        } else if (computerSelection === choices[1]){\n            return('You Win! Scissors beats paper.');\n        }   \n    } \n}\n\nfunction game(){\n    let gamesPlayed = 0;\n    let playerScore = 0;\n    let compScore = 0;\n    \n    // Add event listeners for each button\n    rockBtn.addEventListener('click', function() {\n        let user = choices[0]; // Player selects rock\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){ //append div only if there is text content. otherwise its hidden\n            main.insertBefore(roundResults, playersDiv);\n        }\n        // Update scores and display messages based on round outcome\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; // Update score in game function for player win\n        } else if (round.slice(0, 9) == 'You Lose!') { // Not a tie and not a player win, computer wins\n            compScore++; // Update score in game function for computer win\n        }   \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    paperBtn.addEventListener('click', function() {\n    // Similar logic for paper button click\n        let user = choices[1];\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){\n            main.insertBefore(roundResults, playersDiv);\n        }\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; \n        } else if (round.slice(0, 9) == 'You Lose!') { \n            compScore++;\n        }    \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    scissorBtn.addEventListener('click', function() {\n    // Similar logic for scissor button click\n        let user = choices[2];\n        let computer = getComputerChoice();\n        let round = playRound(user, computer);\n        compChoiceDiv.textContent = ('Computer choice: ' + computer);\n        if (compChoiceDiv.textContent.trim()){\n            main.insertBefore(compChoiceDiv, btnContainer);\n        }\n        roundResults.textContent = (round);\n        if (roundResults.textContent.trim()){\n            main.insertBefore(roundResults, playersDiv);\n        }\n        if (round.slice(0, 8) === 'You Win!') {\n            playerScore++; \n        } else if (round.slice(0, 9) == 'You Lose!') { \n            compScore++; \n        }\n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        gamesPlayed++;\n        scoreBoard.textContent = ('Games played: ' + gamesPlayed);\n        checkWinner(playerScore, compScore);\n    });\n\n    // Function to update scores and display messages\n    function updateScore(round, playerScore, compScore) {\n        if (round === 'It\\'s a tie') {\n          console.log(`It's a tie. Play again.`);\n        } else if (round.slice(0, 8) === 'You Win!') {\n          playerScore++;\n          console.log('Player Score: ' + playerScore + ' - Comp Score: ' + compScore);\n        } else {\n          compScore++;\n          console.log('Player Score: ' + playerScore + ' - Comp Score: ' + compScore);\n        }\n    }\n\n    // Function to check for winner and end game\n    function checkWinner(playerScore, compScore) {\n        if (playerScore === 5) {\n            winner.textContent = ('Player Wins!');\n            userCard.appendChild(winner);\n            // You can optionally reset the game here\n        } else if (compScore === 5) {\n            winner.textContent = ('Computer Wins!');\n            compCard.appendChild(winner);\n          // You can optionally reset the game here\n        }\n    }\n\n    resetBtn.addEventListener('click', function() {\n        rockBtn.disabled = true; // Disable buttons\n        paperBtn.disabled = true;\n        scissorBtn.disabled = true;\n        \n        playerScore = 0;\n        compScore = 0;\n        gamesPlayed = 0;\n        scoreBoard.textContent = ('Game Reset! Scores: 0 - 0'); \n        userScoreboard.textContent = ('Score: ' + playerScore);\n        compScoreBoard.textContent = ('Score: ' + compScore);\n        main.removeChild(roundResults);\n        main.removeChild(compChoiceDiv);\n\n        //remove winner banner/div from player card on reset\n        let winnerDivs = [userCard, compCard]; // Array of both divs to check\n\n        for (let i = 0; i < winnerDivs.length; i++) {\n            let currentDiv = winnerDivs[i];\n            if (currentDiv.contains(winner)) { // Check if winner element exists in current div\n                currentDiv.removeChild(winner);\n                break; // Exit the loop after removing from the first matching div\n            }\n        }\n\n      \n        // After a short delay (optional)\n        setTimeout(function() {\n          rockBtn.disabled = false; // Re-enable buttons\n          paperBtn.disabled = false;\n          scissorBtn.disabled = false;\n        }, 1000); // Delay in milliseconds (adjust as needed)\n    })\n}\n"],"names":[],"version":3,"file":"index.js.map"}